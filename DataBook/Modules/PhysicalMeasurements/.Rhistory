df <- df %>%
mutate(m6bcln = if_else(m6b>=30 & m6b<=200, 1, 2))
df <- df %>%
mutate(sbp = ifelse((m4acln==1 | m4acln==2) & m5acln==1 & m6acln==1, (m5a+m6a)/2,
ifelse(m4acln==1 & m5acln==2 & m6acln==1, (m4a+m6a)/2,
ifelse(m4acln==1 & m5acln==1 & m6acln==2, (m4a+m5a)/2, NA))))
df <- df %>%
mutate(dbp = ifelse((m4bcln==1 | m4bcln==2) & m5bcln==1 & m6bcln==1, (m5b+m6b)/2,
ifelse(m4bcln==1 & m5bcln==2 & m6bcln==1, (m4b+m6b)/2,
ifelse(m4bcln==1 & m5bcln==1 & m6bcln==2, (m4b+m5b)/2, NA))))
df <- df %>%
mutate(sbpcln = if_else((sbp>=40 & sbp<=300), 1, 2))
df <- df %>%
mutate(dbpcln = if_else((dbp>=30 & dbp<=200), 1, 2))
df <- df %>%
mutate(cln = if_else(sbpcln==1 & dbpcln==1, 1,
if_else((m7==1 | h3==1) & (h2a==2 | is.na(h2a)), 2, 2)))
df <- df %>%
mutate(clnnomeds = if_else(cln==1 & treatment==2, 1, 2))
df <- df %>%
mutate(raisedsbp = ifelse(sbp<140, 1,
ifelse(sbp>=140 & sbp<160, 2,
ifelse(sbp>=160, 3, NA))))
df <- df %>%
mutate(raiseddbp = ifelse(dbp<90, 1,
ifelse(dbp>=90 & dbp<100, 2,
ifelse(dbp>=100, 3, NA))))
df <- df %>%
mutate(raisedbp_140_90 = ifelse((raisedsbp>=2 | raiseddbp>=2), "1) SBP>=140 and/or DBP>=90",
"2) SBP<140 and DBP<90"))
df <- df %>%
mutate(raisedbp_160_100 = ifelse((raisedsbp==3 | raiseddbp==3), "1) SBP>=160 and/or DBP>=100",
"2) SBP<160 and DBP<100"))
df <- df %>%
mutate(raisedbp_140_90_or_meds = ifelse(raisedsbp>=2 | raiseddbp>=2 | treatment==1, "1) SBP>=140 and/or DBP>=90 or on meds",
"2) SBP<140 and DBP<90 and not on meds"))
df <- df %>%
mutate(raisedbp_160_100_or_meds = ifelse(raisedsbp==3 | raiseddbp==3 | treatment==1, "1) SBP>=160 and/or DBP>=100 or on meds",
"2) SBP<160 and DBP<100 and not on meds"))
df <- df %>%
mutate(htn_control_cln = ifelse(cln==1 & raisedbp_140_90_or_meds=="1) SBP>=140 and/or DBP>=90 or on meds", 1, 2))
df <- df %>%
mutate(htn_control = ifelse(htn_control_cln==1 & (raisedsbp>=2 | raiseddbp>=2) & (h1==2 | h2a==2), "1) Not previously diagnosed",
ifelse(htn_control_cln==1 & (raisedsbp>=2 | raiseddbp>=2) & h2a==1 & treatment==2, "2) Previously diagnosed, not on meds",
ifelse(htn_control_cln==1 & (raisedsbp>=2 | raiseddbp>=2) & h2a==1 & treatment==1, "3) Previously diagnosed, on meds, not controlled",
ifelse(htn_control_cln==1 & raisedsbp==1 & raiseddbp==1 & h2a==1 & treatment==1, "4) Previously diagnosed, on meds, controlled", NA)))))
library(srvyr)
STEPSClean <- df %>%
as_survey_design(ids=psu, strata=stratum, weights=wstep2, nest=TRUE)
library(tidyr) # for using the unite function
raisedbp_140_90_m <- STEPSClean %>%
filter(cln == 1, sex == "Men") %>%
group_by(agerange, sex, raisedbp_140_90) %>%
summarise(n = unweighted(n()), # calculating n for individual answer choices
mean = survey_mean(vartype = c("ci"))) %>%
mutate(mean = round(100 * mean,1)) %>%
mutate(mean_low = round(100 * mean_low,1)) %>%
mutate(mean_upp = round(100 * mean_upp,1)) %>%
unite("95% CI", mean_low, mean_upp, sep = "–", remove = TRUE) %>%
#rename(variable = agerange) %>% # renaming with a common name for joining all tables later
mutate(n = sum(n)) %>% # replacing previous n with a sum of all answer choices
filter(raisedbp_140_90 == "1) SBP>=140 and/or DBP>=90") %>%
ungroup()
raisedbp_140_90_m
raisedbp_160_100_m <- STEPSClean %>%
filter(cln == 1, sex == "Men") %>%
group_by(agerange, sex, raisedbp_160_100) %>%
summarise(n = unweighted(n()), # calculating n for individual answer choices
mean = survey_mean(vartype = c("ci"))) %>%
mutate(mean = round(100 * mean,1)) %>%
mutate(mean_low = round(100 * mean_low,1)) %>%
mutate(mean_upp = round(100 * mean_upp,1)) %>%
unite("95% CI", mean_low, mean_upp, sep = "–", remove = TRUE) %>%
#rename(variable = agerange) %>% # renaming with a common name for joining all tables later
mutate(n = sum(n)) %>% # replacing previous n with a sum of all answer choices
filter(raisedbp_160_100 == "1) SBP>=160 and/or DBP>=100") %>%
ungroup()
raisedbp_160_100_m
raisedbp_140_90_m <- STEPSClean %>%
filter(cln == 1, sex == "Men") %>%
group_by(agerange, sex, raisedbp_140_90) %>%
summarise(n = unweighted(n()), # calculating n for individual answer choices
mean = survey_mean(vartype = c("ci"), na.rm = TRUE)) %>%
mutate(mean = round(100 * mean,1)) %>%
mutate(mean_low = round(100 * mean_low,1)) %>%
mutate(mean_upp = round(100 * mean_upp,1)) %>%
unite("95% CI", mean_low, mean_upp, sep = "–", remove = TRUE) %>%
#rename(variable = agerange) %>% # renaming with a common name for joining all tables later
mutate(n = sum(n)) %>% # replacing previous n with a sum of all answer choices
filter(raisedbp_140_90 == "1) SBP>=140 and/or DBP>=90") %>%
ungroup()
raisedbp_140_90_m
View(df)
table(df$raisedbp_140_90)
table(is.na(df$raisedbp_140_90))
View(df)
View(df)
View(df)
df <- data %>% select(c(
"agerange", "agerange2", "age", "sex", "valid", "ur", "region",
"m4a", "m4b", "m5a", "m5b", "m6a", "m6b", "m7", "h1", "h2a", "h3",
"psu", "stratum", "wstep2"
))
View(df)
df <- data %>% select(c(
"qr", "agerange", "agerange2", "age", "sex", "valid", "ur", "region",
"m4a", "m4b", "m5a", "m5b", "m6a", "m6b", "m7", "h1", "h2a", "h3",
"psu", "stratum", "wstep2"
))
df <- data %>% select(c(
"agerange", "sex", "valid", "ur", "region",
"m4a", "m4b", "m5a", "m5b", "m6a", "m6b", "m7", "h1", "h2a", "h3",
"psu", "stratum", "wstep2"
))
View(df)
df <- data %>% select(c(
"qr", "agerange", "agerange2", "age", "sex", "valid", "ur", "region",
"m4a", "m4b", "m5a", "m5b", "m6a", "m6b", "m7", "h1", "h2a", "h3",
"psu", "stratum", "wstep2"
))
# Changing the dash to an en dash in age ranges: "-" to "–"
# This is needed for the final output tables
unique(df$agerange)
unique(df$agerange2)
library(stringr)
df <- df %>%
mutate(across("agerange", str_replace, "-", "–")) %>%
mutate(across("agerange2", str_replace, "-", "–"))
# Including only those respondents that are valid==1
df <- subset(df, valid==1)
dim(df)
table(df$valid)
dim(df)
table(is.na(df$valid))
table(df$valid)
table(df$valid)
# Checking & remove NA values from wstep2, etc.
table(is.na(df$wstep2))
df <- df[!(is.na(df$wstep2)),]
# Checking & remove NA values from wstep2, etc.
table(is.na(df$wstep2))
df <- df %>%
mutate(treatment = if_else(h3==1 | m7==1, 1, 2, missing = 2))
table(df$treatmen)
df <- df %>%
mutate(treatment = if_else(h3==1 | m7==1, 1, 2))
table(df$treatmen)
df <- data %>% select(c(
"qr", "agerange", "agerange2", "age", "sex", "valid", "ur", "region",
"m4a", "m4b", "m5a", "m5b", "m6a", "m6b", "m7", "h1", "h2a", "h3",
"psu", "stratum", "wstep2"
))
# Changing the dash to an en dash in age ranges: "-" to "–"
# This is needed for the final output tables
unique(df$agerange)
unique(df$agerange2)
library(stringr)
df <- df %>%
mutate(across("agerange", str_replace, "-", "–")) %>%
mutate(across("agerange2", str_replace, "-", "–"))
# Including only those respondents that are valid==1
df <- subset(df, valid==1)
df <- data %>% select(c(
"qr", "agerange", "agerange2", "age", "sex", "valid", "ur", "region",
"m4a", "m4b", "m5a", "m5b", "m6a", "m6b", "m7", "h1", "h2a", "h3",
"psu", "stratum", "wstep2"
))
# Changing the dash to an en dash in age ranges: "-" to "–"
# This is needed for the final output tables
unique(df$agerange)
unique(df$agerange2)
library(stringr)
df <- df %>%
mutate(across("agerange", str_replace, "-", "–")) %>%
mutate(across("agerange2", str_replace, "-", "–"))
# Including only those respondents that are valid==1
df <- subset(df, valid==1)
dim(df)
table(df$valid)
df <- df %>%
mutate(treatment = if_else(h3==1 | m7==1, 1, 2, missing = 2))
table(df$treatmen)
table(df$treatment)
df <- df %>%
mutate(treatment = if_else(h3==1 | m7==1, 1, 2, missing = 2))
table(df$treatment)
df <- df %>%
mutate(m4acln = if_else(m4a>=40 & m4a<=300, 1, 2, missing = 2))
table(df$m4acln)
df <- df %>%
mutate(m5acln = if_else(m5a>=40 & m5a<=300, 1, 2, missing = 2))
df <- df %>%
mutate(m6acln = if_else(m6a>=40 & m6a<=300, 1, 2, missing = 2))
df <- df %>%
mutate(m4bcln = if_else(m4b>=30 & m4b<=200, 1, 2, missing = 2))
df <- df %>%
mutate(m5bcln = if_else(m5b>=30 & m5b<=200, 1, 2, missing = 2))
df <- df %>%
mutate(m6bcln = if_else(m6b>=30 & m6b<=200, 1, 2, missing = 2))
table(df$m6bcln)
df <- df %>%
mutate(sbp = ifelse((m4acln==1 | m4acln==2) & m5acln==1 & m6acln==1, (m5a+m6a)/2,
ifelse(m4acln==1 & m5acln==2 & m6acln==1, (m4a+m6a)/2,
ifelse(m4acln==1 & m5acln==1 & m6acln==2, (m4a+m5a)/2, NA))))
table(df$sbp)
table(df$is.na(sbp))
table(is.na(df$sbp))
df <- df %>%
mutate(dbp = ifelse((m4bcln==1 | m4bcln==2) & m5bcln==1 & m6bcln==1, (m5b+m6b)/2,
ifelse(m4bcln==1 & m5bcln==2 & m6bcln==1, (m4b+m6b)/2,
ifelse(m4bcln==1 & m5bcln==1 & m6bcln==2, (m4b+m5b)/2, NA))))
table(is.na(df$dbp))
df <- df %>%
mutate(sbpcln = if_else((sbp>=40 & sbp<=300), 1, 2, missing = 2))
df <- df %>%
mutate(dbpcln = if_else((dbp>=30 & dbp<=200), 1, 2, missing = 2))
df <- df %>%
mutate(cln = if_else(sbpcln==1 & dbpcln==1, 1,
if_else((m7==1 | h3==1) & (h2a==2 | is.na(h2a)), 2, 2)))
df <- df %>%
mutate(clnnomeds = if_else(cln==1 & treatment==2, 1, 2))
df <- df %>%
mutate(raisedsbp = ifelse(sbp<140, 1,
ifelse(sbp>=140 & sbp<160, 2,
ifelse(sbp>=160, 3, NA))))
df <- df %>%
mutate(raiseddbp = ifelse(dbp<90, 1,
ifelse(dbp>=90 & dbp<100, 2,
ifelse(dbp>=100, 3, NA))))
table(df$sbpcln)
table(df$dbpcln)
table(df$cln)
table(df$cln)
df <- df %>%
mutate(cln = if_else(sbpcln==1 & dbpcln==1, 1,
if_else((m7==1 | h3==1) & (h2a==2 | is.na(h2a)), 2, 2, missing = 2)))
table(df$cln)
df <- df %>%
mutate(cln = if_else(sbpcln==1 & dbpcln==1 & valid==1, 1,
if_else((m7==1 | h3==1) & (h2a==2 | is.na(h2a)), 2, 2, missing = 2)))
table(df$cln)
df <- df %>%
mutate(cln = if_else(sbpcln==1 & dbpcln==1 & valid==1, 1,
if_else((m7==1 | h3==1) & (h2a==2 | is.na(h2a)), 2, 1, missing = 2)))
table(df$cln)
df <- df %>%
mutate(cln = if_else(sbpcln==1 & dbpcln==1 & valid==1, 1,
if_else((m7==1 | h3==1) & (h2a==2 | is.na(h2a)), 2, 1)))
table(df$cln)
df <- df %>%
mutate(cln = if_else(sbpcln==1 & dbpcln==1 & valid==1, 1,
if_else((m7==1 | h3==1) & (h2a==2 | is.na(h2a)), 2, NA)))
df <- df %>%
mutate(cln = if_else(sbpcln==1 & dbpcln==1 & valid==1, 1,
if_else((m7==1 | h3==1) & (h2a==2 | is.na(h2a)), 2, NA_real_)))
table(df$cln)
df <- df %>%
mutate(cln = ifelse(sbpcln==1 & dbpcln==1 & valid==1, 1,
ifelse((m7==1 | h3==1) & (h2a==2 | is.na(h2a)), 2, NA)))
table(df$cln)
df <- df %>%
mutate(dbpcln = if_else((dbp>=30 & dbp<=200), 1, 2, missing = 2))
table(df$dbpcln)
df <- df %>%
mutate(cln = ifelse(sbpcln==1 & dbpcln==1 & valid==1, 1,
ifelse((m7==1 | h3==1) & (h2a==2 | is.na(h2a)), 2, NA)))
table(df$cln)
df <- df %>%
mutate(cln = if_else(sbpcln==1 & dbpcln==1 & valid==1, 1, missing = 2,
if_else((m7==1 | h3==1) & (h2a==2 | is.na(h2a)), 2, 2, missing = 2)))
table(df$cln)
df <- df %>%
mutate(cln = if_else(sbpcln==1 & dbpcln==1 & valid==1, 1, 2, missing = 2))
df <- df %>%
mutate(cln = if_else((m7==1 | h3==1) & (h2a==2 | is.na(h2a)), 2, cln, missing = 2))
table(df$cln)
df <- df %>%
mutate(cln = if_else((m7==1 | h3==1) & (h2a==2 | is.na(h2a)), 2, 2, missing = 2))
table(df$cln)
df <- df %>%
mutate(cln = if_else(sbpcln==1 & dbpcln==1 & valid==1, 1, 2, missing = 2))
table(df$cln)
df <- df %>%
mutate(cln = if_else((m7==1 | h3==1) & (h2a==2 | is.na(h2a)), 2, 1, missing = 2))
table(df$cln)
df <- df %>%
mutate(cln = if_else(sbpcln==1 & dbpcln==1 & valid==1, 1, 2, missing = 2))
df <- df %>%
mutate(cln = if_else((m7==1 | h3==1) & (h2a==2 | is.na(h2a)), 2, cln, missing = 2))
table(df$cln)
df <- df %>%
mutate(cln = ifelse(sbpcln==1 & dbpcln==1 & valid==1, 1, 2, missing = 2))
df <- df %>%
mutate(cln = ifelse(sbpcln==1 & dbpcln==1 & valid==1, 1, 2))
table(df$cln)
df <- df %>%
mutate(cln = ifelse((m7==1 | h3==1) & (h2a==2 | is.na(h2a)), 2, NA))
table(df$cln)
df <- df %>%
mutate(cln = ifelse(sbpcln==1 & dbpcln==1 & valid==1, 1, 2))
df <- df %>%
mutate(cln = ifelse((m7==1 | h3==1) & (h2a==2 | is.na(h2a)), 2, cln))
table(df$cln)
df <- df %>%
mutate(sbpcln = if_else((sbp>=40 & sbp<=300), 1, 2, missing = 2))
table(df$sbpcln)
df <- df %>%
mutate(dbpcln = if_else((dbp>=30 & dbp<=200), 1, 2, missing = 2))
table(df$dbpcln)
table(df$m7)
table(df$h3)
table(df$h2a)
table(is.na(df$h2a))
df <- df %>%
mutate(cln = case_when(
sbpcln == 1 & dbpcln == 1 ~ 1,
(m7==1 | h3==1) & (h2a==2 | is.na(h2a)) ~ 2,
TRUE ~ 2
))
table(df$cln)
df <- df %>%
mutate(cln = ifelse(sbpcln==1 & dbpcln==1 & valid==1, 1, 2))
table(df$cln)
df <- df %>%
mutate(cln = replace(cln, (m7==1 | h3==1) & (h2a==2 | is.na(h2a)), 2))
table(df$cln)
df <- df %>%
mutate(cln = ifelse(sbpcln==1 & dbpcln==1 & valid==1, 1, 2)) %>%
mutate(cln = replace(cln, (m7==1 | h3==1) & (h2a==2 | is.na(h2a)), 2))
table(df$cln)
df <- df %>%
mutate(cln = ifelse(sbpcln==1 & dbpcln==1 & valid==1, 1, 2)) %>%
mutate(cln = replace(cln, (m7==1 | h3==1) & (h2a==2 | is.na(h2a)), 2))
table(df$cln)
df <- df %>%
mutate(clnnomeds = if_else(cln==1 & treatment==2, 1, 2))
df <- data %>% select(c(
"qr", "agerange", "agerange2", "age", "sex", "valid", "ur", "region",
"m4a", "m4b", "m5a", "m5b", "m6a", "m6b", "m7", "h1", "h2a", "h3",
"psu", "stratum", "wstep2"
))
# Changing the dash to an en dash in age ranges: "-" to "–"
# This is needed for the final output tables
unique(df$agerange)
unique(df$agerange2)
library(stringr)
df <- df %>%
mutate(across("agerange", str_replace, "-", "–")) %>%
mutate(across("agerange2", str_replace, "-", "–"))
# Including only those respondents that are valid==1
df <- subset(df, valid==1)
dim(df)
table(df$valid)
# Checking & remove NA values from wstep2, etc.
table(is.na(df$wstep2))
df <- df[!(is.na(df$wstep2)),]
df <- df %>%
mutate(treatment = if_else(h3==1 | m7==1, 1, 2, missing = 2))
df <- df %>%
mutate(m4acln = if_else(m4a>=40 & m4a<=300, 1, 2, missing = 2))
df <- df %>%
mutate(m5acln = if_else(m5a>=40 & m5a<=300, 1, 2, missing = 2))
df <- df %>%
mutate(m6acln = if_else(m6a>=40 & m6a<=300, 1, 2, missing = 2))
df <- df %>%
mutate(m4bcln = if_else(m4b>=30 & m4b<=200, 1, 2, missing = 2))
df <- df %>%
mutate(m5bcln = if_else(m5b>=30 & m5b<=200, 1, 2, missing = 2))
df <- df %>%
mutate(m6bcln = if_else(m6b>=30 & m6b<=200, 1, 2, missing = 2))
df <- df %>%
mutate(sbp = ifelse((m4acln==1 | m4acln==2) & m5acln==1 & m6acln==1, (m5a+m6a)/2,
ifelse(m4acln==1 & m5acln==2 & m6acln==1, (m4a+m6a)/2,
ifelse(m4acln==1 & m5acln==1 & m6acln==2, (m4a+m5a)/2, NA))))
df <- df %>%
mutate(dbp = ifelse((m4bcln==1 | m4bcln==2) & m5bcln==1 & m6bcln==1, (m5b+m6b)/2,
ifelse(m4bcln==1 & m5bcln==2 & m6bcln==1, (m4b+m6b)/2,
ifelse(m4bcln==1 & m5bcln==1 & m6bcln==2, (m4b+m5b)/2, NA))))
df <- df %>%
mutate(sbpcln = if_else((sbp>=40 & sbp<=300), 1, 2, missing = 2))
df <- df %>%
mutate(dbpcln = if_else((dbp>=30 & dbp<=200), 1, 2, missing = 2))
df <- df %>%
mutate(cln = ifelse(sbpcln==1 & dbpcln==1 & valid==1, 1, 2)) %>%
mutate(cln = replace(cln, (m7==1 | h3==1) & (h2a==2 | is.na(h2a)), 2)) # case when there is ifelse in Epi Info
# and then another if without else, which basically replaces previous values
table(df$cln)
df <- df %>%
mutate(clnnomeds = if_else(cln==1 & treatment==2, 1, 2))
df <- df %>%
mutate(raisedsbp = ifelse(sbp<140, 1,
ifelse(sbp>=140 & sbp<160, 2,
ifelse(sbp>=160, 3, NA))))
df <- df %>%
mutate(raiseddbp = ifelse(dbp<90, 1,
ifelse(dbp>=90 & dbp<100, 2,
ifelse(dbp>=100, 3, NA))))
df <- df %>%
mutate(raisedbp_140_90 = ifelse((raisedsbp>=2 | raiseddbp>=2), "1) SBP>=140 and/or DBP>=90",
"2) SBP<140 and DBP<90"))
table(df$raisedbp_140_90)
table(is.na(df$raisedbp_140_90))
df <- df %>%
mutate(raisedbp_160_100 = ifelse((raisedsbp==3 | raiseddbp==3), "1) SBP>=160 and/or DBP>=100",
"2) SBP<160 and DBP<100"))
df <- df %>%
mutate(raisedbp_140_90_or_meds = ifelse(raisedsbp>=2 | raiseddbp>=2 | treatment==1, "1) SBP>=140 and/or DBP>=90 or on meds",
"2) SBP<140 and DBP<90 and not on meds"))
df <- df %>%
mutate(raisedbp_160_100_or_meds = ifelse(raisedsbp==3 | raiseddbp==3 | treatment==1, "1) SBP>=160 and/or DBP>=100 or on meds",
"2) SBP<160 and DBP<100 and not on meds"))
df <- df %>%
mutate(htn_control_cln = ifelse(cln==1 & raisedbp_140_90_or_meds=="1) SBP>=140 and/or DBP>=90 or on meds", 1, 2))
df <- df %>%
mutate(htn_control = ifelse(htn_control_cln==1 & (raisedsbp>=2 | raiseddbp>=2) & (h1==2 | h2a==2), "1) Not previously diagnosed",
ifelse(htn_control_cln==1 & (raisedsbp>=2 | raiseddbp>=2) & h2a==1 & treatment==2, "2) Previously diagnosed, not on meds",
ifelse(htn_control_cln==1 & (raisedsbp>=2 | raiseddbp>=2) & h2a==1 & treatment==1, "3) Previously diagnosed, on meds, not controlled",
ifelse(htn_control_cln==1 & raisedsbp==1 & raiseddbp==1 & h2a==1 & treatment==1, "4) Previously diagnosed, on meds, controlled", NA)))))
library(srvyr)
STEPSClean <- df %>%
as_survey_design(ids=psu, strata=stratum, weights=wstep2, nest=TRUE)
library(tidyr) # for using the unite function
raisedbp_140_90_m <- STEPSClean %>%
filter(cln == 1, sex == "Men") %>%
group_by(agerange, sex, raisedbp_140_90) %>%
summarise(n = unweighted(n()), # calculating n for individual answer choices
mean = survey_mean(vartype = c("ci"))) %>%
mutate(mean = round(100 * mean,1)) %>%
mutate(mean_low = round(100 * mean_low,1)) %>%
mutate(mean_upp = round(100 * mean_upp,1)) %>%
unite("95% CI", mean_low, mean_upp, sep = "–", remove = TRUE) %>%
#rename(variable = agerange) %>% # renaming with a common name for joining all tables later
mutate(n = sum(n)) %>% # replacing previous n with a sum of all answer choices
filter(raisedbp_140_90 == "1) SBP>=140 and/or DBP>=90") %>%
ungroup()
raisedbp_140_90_m
raisedbp_140_90_m_t <- STEPSClean %>%
filter(cln == 1, sex == "Men") %>%
group_by(agerange, sex, raisedbp_140_90) %>%
summarise(n = unweighted(n()),
mean = survey_mean(vartype = c("ci"))) %>%
mutate(mean = round(100 * mean,1)) %>%
mutate(mean_low = round(100 * mean_low,1)) %>%
mutate(mean_upp = round(100 * mean_upp,1)) %>%
unite("95% CI", mean_low, mean_upp, sep = "–", remove = TRUE) %>%
mutate(agerange = "18–69", .before = "sex") %>%
mutate(n = sum(n)) %>%
filter(raisedbp_140_90 == "1) SBP>=140 and/or DBP>=90") %>%
ungroup()
raisedbp_140_90_m_t
raisedbp_140_90_m_t <- STEPSClean %>%
filter(cln == 1, sex == "Men") %>%
group_by(sex, raisedbp_140_90) %>%
summarise(n = unweighted(n()),
mean = survey_mean(vartype = c("ci"))) %>%
mutate(mean = round(100 * mean,1)) %>%
mutate(mean_low = round(100 * mean_low,1)) %>%
mutate(mean_upp = round(100 * mean_upp,1)) %>%
unite("95% CI", mean_low, mean_upp, sep = "–", remove = TRUE) %>%
mutate(agerange = "18–69", .before = "sex") %>%
mutate(n = sum(n)) %>%
filter(raisedbp_140_90 == "1) SBP>=140 and/or DBP>=90") %>%
ungroup()
raisedbp_140_90_m_t
raisedbp_140_90_m_t <- STEPSClean %>%
filter(cln == 1, sex == "Men") %>%
group_by(sex, raisedbp_140_90) %>%
summarise(n = unweighted(n()),
mean = survey_mean(vartype = c("ci"))) %>%
mutate(mean = round(100 * mean,1)) %>%
mutate(mean_low = round(100 * mean_low,1)) %>%
mutate(mean_upp = round(100 * mean_upp,1)) %>%
unite("95% CI", mean_low, mean_upp, sep = "–", remove = TRUE) %>%
mutate(agerange = "18–69", .before = "sex") %>%
mutate(n = sum(n)) %>%
filter(raisedbp_140_90 == "1) SBP>=140 and/or DBP>=90") %>%
ungroup()
raisedbp_140_90_m_t
raisedbp_160_100_m <- STEPSClean %>%
filter(cln == 1, sex == "Men") %>%
group_by(agerange, sex, raisedbp_160_100) %>%
summarise(n = unweighted(n()), # calculating n for individual answer choices
mean = survey_mean(vartype = c("ci"))) %>%
mutate(mean = round(100 * mean,1)) %>%
mutate(mean_low = round(100 * mean_low,1)) %>%
mutate(mean_upp = round(100 * mean_upp,1)) %>%
unite("95% CI", mean_low, mean_upp, sep = "–", remove = TRUE) %>%
#rename(variable = agerange) %>% # renaming with a common name for joining all tables later
mutate(n = sum(n)) %>% # replacing previous n with a sum of all answer choices
filter(raisedbp_160_100 == "1) SBP>=160 and/or DBP>=100") %>%
ungroup()
raisedbp_160_100_m
raisedbp_160_100_m_t <- STEPSClean %>%
filter(cln == 1, sex == "Men") %>%
group_by(sex, raisedbp_160_100) %>%
summarise(n = unweighted(n()),
mean = survey_mean(vartype = c("ci"))) %>%
mutate(mean = round(100 * mean,1)) %>%
mutate(mean_low = round(100 * mean_low,1)) %>%
mutate(mean_upp = round(100 * mean_upp,1)) %>%
unite("95% CI", mean_low, mean_upp, sep = "–", remove = TRUE) %>%
mutate(agerange = "18–69", .before = "sex") %>%
mutate(n = sum(n)) %>%
filter(raisedbp_160_100 == "1) SBP>=160 and/or DBP>=100") %>%
ungroup()
raisedbp_160_100_m_t
library(RODBC)
library(Hmisc) # needed to load mdb data in MacOS
data1 <- mdb.get("~/World Health Organization/World Health Organization/STEPs/Country data/BLR2020/DataBook/MDB_file_with_epi_info_programs/Extra_with_all_tables_for_validation_in_R/STEPS.mdb", tables = "data1") # Read in mdb data for MacOS by each table
data1 <- mdb.get("/Users/serge/World Health Organization/World Health Organization/STEPs/Country data/BLR2020/DataBook/MDB_file_with_epi_info_programs/Extra_with_all_tables_for_validation_in_R/STEPS.mdb", tables = "data1") # Read in mdb data for MacOS by each table
data1 <- mdb.get(/Users/serge/World Health Organization/World Health Organization/STEPs/Country data/BLR2020/DataBook/MDB_file_with_epi_info_programs/Extra_with_all_tables_for_validation_in_R/STEPS.mdb, tables = "data1") # Read in mdb data for MacOS by each table
MDB <- source("~/World Health Organization/World Health Organization/STEPs/Country data/BLR2020/DataBook/MDB_file_with_epi_info_programs/Extra_with_all_tables_for_validation_in_R/STEPS.mdb")
